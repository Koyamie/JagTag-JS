version: 2
jobs:
  test:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Test & upload coverage data
          command: npm test
  build:
    docker:
      - image: python:3.5
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Build
          command: |
            . venv/bin/activate
            mkdocs build
  deploy:
    docker:
      - image: python:3.5
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Build
          command: |
            . venv/bin/activate
            mkdocs build
      - add_ssh_keys:
          fingerprints:
              - "90:a9:08:28:09:82:9e:a6:d7:b2:9e:aa:0b:85:6e:cc"
      - run:
          name: Deploy
          command: |
            . venv/bin/activate
            git config user.email 9768134+Dougley@users.noreply.github.com
            mkdocs gh-deploy

workflows:
  version: 2
  test_build_deploy:
    jobs:
      - test
      - build:
          requires:
            - test
      - deploy:
          requires:
              - test
              - build
          filters:
            branches:
              only: master
